[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

# ==== Linting configuration.

[tool.ruff]
include = ["wattpad/*.py", "tests/*.py"]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
]
ignore = [
    "S101",    # Allow use of assert for typing reasons.
    "PLR2004", # Magic value comparison.
    "SIM105",  # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "ANN101",  # Type of Self for self is usually implicit.
    "ANN102",  # Type of type[Self] for cls is usually implicit.
    "ANN204",  # Special method return types are usually implicit or known by type checkers.
    "ANN401",  # Any is necessary sometimes.
    "PT001",   # pytest recommends against empty parentheses on pytest.fixture.
    "UP038",   # isinstance performs better with tuples than unions.
    # == Recommended ignores by ruff when using ruff format.
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "COM812",
    "COM819",
    # "E501",
    "ISC001",
    "ISC002",
    # == Rules that conflict with the codebase style.
    # Allow elif after return, raise, and continue, respectively.
    "RET505",
    "RET506",
    "RET507",
    # Allow catching Exception.
    "BLE001",
    # Allow passing in literal strings to exception constructors.
    "TRY003",
    "EM101",
    "EM102",
]
unfixable = [
    "ERA", # Prevent incorrectly detected comments from being automatically deleted.
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


# ==== Type-checking configuration.

[tool.pyright]
include = ["spec", "tests"]
pythonVersion = "3.9"
typeCheckingMode = "strict"

reportPrivateUsage = false
reportUnnecessaryTypeIgnoreComment = "warning"
